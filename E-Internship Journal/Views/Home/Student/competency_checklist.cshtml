<div class="container-fluid">
    <!-- Breadcrumbs-->
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="~/Home/Index">Homepage</a>
        </li>
        <li class="breadcrumb-item active">Competency Checklist</li>
    </ol>
    <div class="card" style="border-width:0px;">
        <div class="card-body">
            <div class="form-group">
                <div class="col-xs-12 pull-right">
                    <div class="form-inline">
                        <input type="button" value="View History" class="btn btn-default" onclick="location.href='@Url.Action("competency_history", "Home" )'" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="card mb-3">
        <div class="card-header">
            <i class="fa fa-table"></i> Competency Checklist
        </div>
        <div class="table-responsive">
            <table class="table table-bordered" id="tblCompetencies" cellspacing="0">
                <thead>
                    <tr>
                        <th class="col-sm-11">Competency</th>
                        <th class="col-sm-1">Tick if performed</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        @*<div class="card-footer"></div>*@
    </div>
</div>
<div class="card-body">
    <div class="form-group">
        <div class="col-12">
            <button class="btn btn-default pull-left" onclick="window.history.go(-1); return false">
                Back
            </button>
            <button class="btn btn-primary pull-right" name="submit" id="submit">
                Save
            </button>
        </div>
    </div>
</div>
&nbsp;
<script>
    var internshipRecordId = getCookie("InternshipRecordId");
    var monthRecordId = null;
    var competencyCheckeds = [];

    if (internshipRecordId != null) {
        $.ajax({
            url: '/api/competencies/getInternshipCompetncies/' + internshipRecordId,
            method: 'GET',
            dataType: 'json',
            success: function (competencies) {
                for (i = 0; i < competencies.length; i++) {
                    var competency = competencies[i];
                    var newRow = $('<tr></tr>');
                    var newCell = $('<td>');
                    newCell.html(competency.Description);
                    newRow.append(newCell);
                    var newCell = $('<td>');
                    var newCheckboxItem = $('<input name="CompetencyCheck" type="checkbox" value="' + competency.CompetencyId + '">');
                    newCell.append(newCheckboxItem);
                    newRow.append(newCell);
                    $('#tblCompetencies').append(newRow);
                }
            }
        });
    }

    $.ajax({
        url: '/api/month_record/Latest',
        method: 'GET',
        dataType: 'json',
        success: function (data) {
            console.dir(data);
            monthRecordId = data.MonthId;
            for (i = 0; i < data.CompetencyCheckeds.length; i++) {
                var ccid = data.CompetencyCheckeds[i].CompetencyId;
                $("input[name='CompetencyCheck']").each(function () {
                    if ($(this).val() == ccid) {
                        $(this).prop('checked', true);
                    }
                });
            }
        }
    });

    $('#submit').click(function () {
        var competencyIds = [];

        $("input[name='CompetencyCheck']").each(function () {
            if ($(this).is(':checked')) {
                competencyIds.push($(this).val());
            }
        });

        var webFormData = new WebFormData(competencyIds);
        console.dir(webFormData);

        $.ajax({
            url: '/api/month_record/UpdateCompetencyCheckList/' + monthRecordId,
            method: 'PUT',
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            cache: false,
            data: "'" + JSON.stringify(webFormData) + "'",
            success: function (data) {
                swal({
                    type: 'success',
                    title: 'Saved!',
                    text: data.Message
                }).then(
                    function () {
                        window.location.reload();
                    });
            },
            error: function (data) {
                swal({
                    type: 'error',
                    title: 'Error',
                    text: data.Message
                });
            }
        });
    });

    function getCookie(name) {
            var dc = document.cookie;
            var prefix = name + "=";
            var begin = dc.indexOf("; " + prefix);
            if (begin == -1) {
                begin = dc.indexOf(prefix);
                if (begin != 0) return null;
            } else {
                begin += 2;
            }
            var end = document.cookie.indexOf(";", begin);
            if (end == -1) {
                end = dc.length;
            }
            return unescape(dc.substring(begin + prefix.length, end));
    }

    function WebFormData(checkedCompetencies) { 
        this.CompetencyIds = checkedCompetencies;
    }

</script>