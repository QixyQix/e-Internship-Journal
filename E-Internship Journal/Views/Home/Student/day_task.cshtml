<div class="container-fluid">
    <!-- Breadcrumbs-->
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="~/Home/Index">Homepage</a>
        </li>
        <li class="breadcrumb-item active">Manage Task</li>
    </ol>
    <div class="card-body">
        <div class="form-inline">
            <label class="control-label requiredField" for="date">
                Date:&nbsp;
            </label>
            <div class="input-group">
                <div class="input-group-addon">
                    <i class="fa fa-calendar">
                    </i>
                </div>
                <input class="form-control" id="date" name="date" placeholder="DD/MM/YYYY" type="text">
            </div>
            @*<small id="datehelp" class="form-text text-muted">Firstly, please select a date</small>*@
        </div>
    </div>
    <div class="card mb-3">
        <div class="card-header">
            <i class="fa fa-pencil"></i> Manage Task
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable2" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th width="95%">Description</th>
                            <th width="5%">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
                <button class="btn btn-primary form-control" id="addTaskBtn">
                    <i class="fa fa-plus"></i> Add Task
                </button>
            </div>
        </div>
        <div class="card-footer small text-muted">Updated yesterday at 11:59 PM</div>
    </div>
</div>
<div class="card-body">
        <div class="form-group">
            <div class="col-12">
                <button class="btn btn-default pull-left" onclick="window.history.go(-1); return false">
                    Back
                </button>
                <button class="btn btn-primary pull-right" name="submit" id="btnSave" type="submit">
                    Save
                </button>
            </div>
        </div>
    <br />
</div>
<script>
    var editor;
    $(document).ready(function () {
        var cookieDate;
        var cookieId;

        var table = $('#dataTable2');

        //var dc = document.cookie;
        //getCookie(dc);
        var cookieDate = getCookie("date");
        var cookieId = getCookie("id");

        $('#addTaskBtn').on('click', function () 
        {
            $('#dataTable2').append('<tr><td> <textarea name="taskInput" class="form-control" style="width: 100%; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box;"></textarea></td ><td><button class="btn btn-sm btn-danger" onClick="$(this).closest(\'tr\').remove();"><i class="fa fa-times"></i></button></td></tr >');
        });

        

        if (cookieDate != null || cookieDate != undefined) {
            $('#date').val(moment(new Date(cookieDate)).format("DD/MM/YYYY"));

        }
        if (cookieId == "undefined" || cookieId == null) {

            $('#btnSave').on('click', function () {
                var colectedTodayDate = $('#date').val().toString('dd/mm/yyyy');
                var collectedRemarks = $('#dropdownselect').val();
                var collectedArrivalTime = ($('#timeinval').val() != "") ? $('#timeinval').val() : null;
                var collectedDepartureTime = ($('#timeoutval').val() != "") ? $('#timeoutval').val() : null;
                //var momentDate = moment(colectedTodayDate + colectedArrivalTime, 'YYYY-MM-DD HH:mm:ss');
                var formatedArrivalTime = ($('#timeinval').val() != "") ? new Date(colectedTodayDate + ' ' + collectedArrivalTime) : null;
                var formatedDepartureTime = ($('#timeoutval').val() != "") ? new Date(colectedTodayDate + ' ' + collectedDepartureTime) : null;
                var tasks = [];
                $.each($("[name=taskInput]"), function () {
                    if ($(this).val().trim()) { 
                        tasks.push($(this).val().trim());
                    }
                });
                var webFormData = new WebFormData(colectedTodayDate, collectedRemarks, formatedArrivalTime, formatedDepartureTime, tasks);
                console.dir(webFormData);
                $saveTaskHanlder = jQuery.ajax({
                    url: '/Api/Day_Record/SaveNewDayRecordInformation',
                    method: 'POST',
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    cache: false,
                    data: "'" + JSON.stringify(webFormData) + "'",
                    success: function (data) {
                        swal({
                            type: 'success',
                            title: 'Your work has been saved',
                        })
                    },
                    error: function (data) {
                        swal(
                            'Oops...',
                            'Something went wrong!',
                            'error'
                        )
                    }
                });
                $getDayHandler.done(function (data, textStatus, jqXHR) {
                 });//End of Done
            });
        } else {
            //Update day record method
        }
    });

    function getCookie(name) {
        var dc = document.cookie;
        var prefix = name + "=";
        var begin = dc.indexOf("; " + prefix);
        if (begin == -1) {
            begin = dc.indexOf(prefix);
            if (begin != 0) return null;
        } else {
            begin += 2;
        }
        var end = document.cookie.indexOf(";", begin);
        if (end == -1) {
            end = dc.length;
        }
        return unescape(dc.substring(begin + prefix.length, end));
    }
    function formatAMPM(date) {
        var hours = date.getHours();
        var minutes = date.getMinutes();
        var ampm = hours >= 12 ? 'pm' : 'am';
        hours = hours % 12;
        hours = hours ? hours : 12; // the hour '0' should be '12'
        minutes = minutes < 10 ? '0' + minutes : minutes;
        var strTime = hours + ':' + minutes + ' ' + ampm;
        return strTime;
    }
    function WebFormData(inTodayDate, inRemarks, inTimein, inTimeOut, tasks) {
        this.Date = inTodayDate;
        this.Remarks = inRemarks;
        this.ArrivalTime = inTimein;
        this.DepartureTime = inTimeOut;
        this.Tasks = tasks

    }
    function getTaskFunction(cookieId, finalTable) {
        var aa;
        $getDayHandler = jQuery.ajax({
            url: '/Api/Task_Record/' + cookieId,
            method: 'GET',
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            cache: false,
        });
        $getDayHandler.done(function (data, textStatus, jqXHR) {
            // window.$brandPhotoInputElement.fileinput('upload');
            // data.Message;
            //return data;
            var oneArrivalTime = data[0].ArrivalTime;

            var formattedArrivalTime = formatAMPM(new Date(oneArrivalTime));

            $('#inputTimein').val(formattedArrivalTime);
            $('#inputTimein').attr('readonly', true);
            if (data[0].DepartureTime != null || "undefined") {
                var oneDepartureTime = data[0].DepartureTime;
                var formattedDepartureTime = formatAMPM(new Date(oneDepartureTime));
                $('#timeoutval').val(formattedDepartureTime);
                $('#timeoutval').attr('readonly', true);
            }

            //var time = oneArrivalTime.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });
            //for (i = 0; i < data.length; i++) {
            //    var

            //}
            editor = new $.fn.dataTable.Editor({

                //data: data,
                table: finalTable,
                idSrc: 'TaskRecordId',
                fields: [{
                    label: "Description:",
                    name: "Description"
                }
                ]
            });
            finalTable = finalTable.DataTable({
                //finalTable({
                "bPaginate": false,
                "bLengthChange": false,
                "bFilter": false,
                "bSort": false,
                "bInfo": false,
                "bAutoWidth": false,
                "asStripClasses": null,
                //--disable the sorting--
                dom: 'rti',
                data: data,
                order: [[1, 'asc']],
                columns: [
                    { data: "DayRecordId", "sWidth": "10%" },
                    { data: "Description", "sWidth": "80%" },
                    {
                        "data": "TaskRecordId",
                        "bSortable": false,
                        "mRender": function (o) { return '<button class="btn btn-sm btn-danger" id="deletebtn" value="' + o + '"><i class="fa fa-times"></i></button>' }
                    }
                ],
                language: {
                    emptyTable: "No task was found, please create one.",
                }
            });// End of DataTable
            $('#dataTable2').on('focusout', 'tbody td:not(:first-child, :last-child)', function (e) {
                //console.dir("test");
                //console.dir(editor.field('Description').val());
                //var changed = editor.field('Description').val();
                //var $tr = $(this).closest('tr');
                //var $column = $(this).closest('tr td');
                //var myRow = $("#dataTable2 tr").index($tr);
                //var myColumn = $("#dataTable2 td").index($column);
                //var qqqww = document.getElementById("dataTable2").rows[1].cells[1];
                //var qqwqeqwe = aa.row(myRow - 1);
                ////var myData = $tr.attr('data-myData')
                //console.log(myRow, myColumn);
                ////aa.row(0).columns(1).val();

                //var data = aa.row(myRow-1).data();
                //var row = $(aa.row(myRow - 1).node());
                //var qwewqeqwe = $(this).text();
                //data.Description = changed;
                //aa.row(row).data(data).draw();
                //console.dir($(e +'tbody tr:nth-child(' + myRow + ')').find("td:eq(1)").html())
                //$('#dataTable2 tbody tr:nth-child(' + myRow + ')').find("td:eq(1)").text(changed);
                //var qqq = finalTable.row(0).columns(1)
                //qqq.data(changed).draw();
            })
            //editor.field('Description').input().on('change', function (e, d) {
            //    //var ww = d.editorSet();
            //    // var qq = d;
            //    if (d && d.editorSet) return;
            //    //console.dir($(this).val());
            //    // alert("You selected " + $(this).val());
            //    var changed = $(this).val();
            //    //var ww = this.s.editRow;
            //   // var www = $(this).row.data();
            //    //var idx = finalTable
            //     //   .row()
            //    //  .index();
            //    finalTable.row(0).columns(1).data(changed).draw();
            //    finalTable.rows().iterator('row', function (context, index) {
            //        //var changed2 = $(this).val();
            //       // var iqwe = editor.field('Description');
            //        var wqq = editor.field('Description').val();
            //        var data = this.row(index).data();
            //        var row = $(this.row(index).node());
            //        data.Description = changed;
            //        //data[0] = 'new data';
            //       // finalTable.row(0).data(data).draw();
            //    });
            //});
        });// End of Done Function
    }
</script>
