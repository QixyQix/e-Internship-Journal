<style>
    .textbox {
        width: 100%;
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
    }
</style>

<div class="container-fluid">
    <!-- Breadcrumbs-->
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="~/Home/Index">Homepage</a>
        </li>
        <li class="breadcrumb-item active">Manage Task</li>
    </ol>
    <div class="card-body">
        <div class="form-inline">
            <label class="control-label requiredField" for="date">
                Date:&nbsp;
            </label>
            <div class="input-group">
                <div class="input-group-addon">
                    <i class="fa fa-calendar">
                    </i>
                </div>
                <input class="form-control" id="date" name="date" placeholder="DD/MM/YYYY" type="text">
            </div>
            @*<small id="datehelp" class="form-text text-muted">Firstly, please select a date</small>*@
        </div>
    </div>
    <div class="card mb-3">
        <div class="card-header">
            <i class="fa fa-pencil"></i> Manage Task
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable2" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th width="95%">Description</th>
                            <th width="5%">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
                <button class="btn btn-primary form-control" id="addTaskBtn">
                    <i class="fa fa-plus"></i> Add Task
                </button>
            </div>
        </div>
        <div class="card-footer"></div>
    </div>
</div>
<div class="card-body">
    <div class="form-group">
        <div class="col-12">
            <button class="btn btn-default pull-left" onclick="window.history.go(-1); return false">
                Back
            </button>
            <button class="btn btn-primary pull-right" name="submit" id="btnSave" type="submit">
                Save
            </button>
        </div>
    </div>
    <br />
</div>
<script>
    var editor;
    $(document).ready(function () {
        var cookieDate;
        var cookieId;

        var table = $('#dataTable2');

        //var dc = document.cookie;
        //getCookie(dc);
        var cookieDate = getCookie("date");
        //var cookieId = getCookie("id");
        var internshipRecordId = getCookie("InternshipRecordId");

        console.dir(moment(cookieDate).format("DD-MM-YYYY"));
        console.dir(cookieDate);

        $.ajax({
            url: '/Api/Task_Record/getTasksForDay/' + internshipRecordId + "/" + moment(cookieDate).format("DD-MM-YYYY"),
            method: 'GET',
            dataType: 'json',
            cache: false,
            success: function (data) {
                console.dir(data);
                for (i = 0; i < data.length; i++) {
                    var onetask = data[i];
                    table.append('<tr><td> <input type="text" name="taskInputId" value="' + onetask.Id + '" hidden/><textarea name="taskInput" class="form-control textbox">' + onetask.Description + '</textarea></td ><td><button class="btn btn-sm btn-danger" onClick="removeTask($(this), ' + onetask.Id + ')"><i class="fa fa-times"></i></button></td></tr >');
                }
            }
        });


        $('#addTaskBtn').on('click', function () {
            table.append('<tr><td> <input type="text" name="taskInputId" value="" hidden/><textarea name="taskInput" class="form-control textbox"></textarea></td ><td><button class="btn btn-sm btn-danger" onClick="removeTask($(this), \'\')"><i class="fa fa-times"></i></button></td></tr >');
        });

        if (cookieDate != null || cookieDate != undefined) {
            $('#date').val(moment(new Date(cookieDate)).format("DD/MM/YYYY"));
        }
        if (new Date(cookieDate).toDateString() != "Invalid Date") {

            $('#btnSave').on('click', function () {
                var collectedTodayDate = $('#date').val().toString('dd/mm/yyyy');
                var taskIds = [];
                var tasks = [];
                var taskObjs = [];

                $.each($("[name=taskInput]"), function () {
                    if ($(this).val().trim()) {
                        tasks.push($(this).val().trim());
                    }
                });
                $.each($("[name=taskInputId]"), function () {
                    if ($(this).val().trim()) {
                        taskIds.push($(this).val().trim());
                    }
                });

                for (i = 0; i < tasks.length; i++) {
                    if (i < taskIds.length) {
                        taskObjs.push(new TaskDataObject(taskIds[i], tasks[i]));
                    } else {
                        taskObjs.push(new TaskDataObject("", tasks[i]));
                    }
                }

                var webFormData = new WebFormData(internshipRecordId, collectedTodayDate, taskObjs);
                console.dir(webFormData);
                console.dir(JSON.stringify(webFormData));

                $.ajax({
                    url: '/Api/Task_Record/updateTasksForDay',
                    method: 'PUT',
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    cache: false,
                    data: "'" + JSON.stringify(webFormData) + "'",
                    success: function (data) {
                        swal({
                            type: 'success',
                            title: 'Saved!',
                            text: data.Message
                        }).then(
                            function () {
                                window.location.reload();
                            });
                    },
                    error: function (data) {
                        swal({
                            type: 'error',
                            title: 'Error',
                            text: data.Message
                        });
                    }
                });
            });
        } else {
            swal({
                type: 'error',
                title: 'Oops!',
                text: 'Invalid Date Input!'
            });
        }
    });

    function removeTask(object, id) {
        if (id != '') {
            swal({
                title: 'Are you sure you want this task deleted?',
                text: "This cannot be undone!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                confirmButtonText: 'Delete'
            }).then(function () {
                $.ajax({
                    url: '/Api/Task_Record/' + id,
                    method: 'DELETE',
                    dataType: 'json',
                    cache: false,
                    success: function (data) {
                        swal({
                            type: 'success',
                            title: 'Deleted!',
                            text: 'It is now gone.. forever.'
                        }).then(function () {
                            object.closest('tr').remove();
                            window.location.reload();
                        });
                    },
                    fail: function (data) {
                        swal({
                            type: 'error',
                            title: 'Oops!',
                            text: data.Message
                        });
                    }
                });
            })
        } else {
            object.closest('tr').remove();
        }

    }

    function getCookie(name) {
        var dc = document.cookie;
        var prefix = name + "=";
        var begin = dc.indexOf("; " + prefix);
        if (begin == -1) {
            begin = dc.indexOf(prefix);
            if (begin != 0) return null;
        } else {
            begin += 2;
        }
        var end = document.cookie.indexOf(";", begin);
        if (end == -1) {
            end = dc.length;
        }
        return unescape(dc.substring(begin + prefix.length, end));
    }
    function formatAMPM(date) {
        var hours = date.getHours();
        var minutes = date.getMinutes();
        var ampm = hours >= 12 ? 'pm' : 'am';
        hours = hours % 12;
        hours = hours ? hours : 12; // the hour '0' should be '12'
        minutes = minutes < 10 ? '0' + minutes : minutes;
        var strTime = hours + ':' + minutes + ' ' + ampm;
        return strTime;
    }
    function WebFormData(inInternshipRecordId, inDate, inTaskObjs) {
        this.InternshipRecordId = inInternshipRecordId;
        this.Date = inDate;
        this.Tasks = inTaskObjs;
    }

    function TaskDataObject(inTaskId, inTaskDescription) {
        this.Id = inTaskId;
        this.Description = inTaskDescription;
    }
</script>
