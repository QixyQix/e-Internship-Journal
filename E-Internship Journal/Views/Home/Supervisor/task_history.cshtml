@{
    ViewData["Title"] = "View Task Page";
}
<div class="container-fluid">
    <!-- Breadcrumbs -->
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="~/Home/Index">Homepage</a>
        </li>
        <li class="breadcrumb-item">
            <a href="~/Home/Student_Journal">Student Journal</a>
        </li>
        <li class="breadcrumb-item active">Daily Task</li>
    </ol>
    <div class="card" style="border-width:0px;">
        <div class="card-body">
            <div class="form-group">
                <div class="pull-left">
                    <label>Student Name:&nbsp</label><select class="form-control" id="selectstudent"></select>
                </div>
                <div class="col-xs-4 pull-right">
                    <label>View By:&nbsp</label>
                    <select class="form-control" id="selectMonthRecord"></select>
                </div>
            </div>
        </div>
    </div>
    <!-- Example DataTables Card-->
    <div class="card mb-3">
        <div class="card-header d-inline">
            <i class="fa fa-table fa-2x pull-left"></i> <h3>Daily Tasks</h3>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th width="10%">Date</th>
                            <th>Task Recorded</th>
                            <th width="5%">Remarks</th>
                        </tr>
                    </thead>
                    <tbody>
                        @*<tr>
                                <td>1</td>
                                <td>I love to Slack</td>
                                <td><input type='text' class="form-control" id="remarks" /></td>
                            </tr>*@
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer"></div>
    </div>
    <!--end with attendance taking-->
    <div class="card-body">
        <div class="form-group">
            <div class="col-12">
                <button class="btn btn-default pull-left" onclick="location.href='http://' + window.location.host +'/Home/Student_Journal'">
                    Back
                </button>
            </div>
        </div>
    </div>
    <br />
</div>
<!-- comment Modal -->
<div class="modal fade" id="commentModal" tabindex="-1" role="dialog" aria-labelledby="attendanceModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="commentModalLabel"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container">
                    <form>
                        <div class="form-group ">
                            <label>Comment:</label>
                            <textarea class="form-control" rows="5" id="commentTask" readonly>Went to meeting, and prepared meeting report.</textarea>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- /.container-fluid -->
<!-- /.content-wrapper -->
<script>
    var months;
    var selectedMonthData;
    loadStudents();
    var internshipId = getCookie("selectedInternship");
    $('#selectstudent').val(internshipId);
    loadMonths(internshipId);
    

    var table = $('#dataTable').DataTable({
        dom: "<'row'<'col-sm-12'tr>>" +
        "<'row'<'col-sm-4'l><'col-sm-8'p>>",
        columns: [
            {
                data: "Date",
                mRender: function (o) { return moment(o).format("DD/MM/YYYY"); }
            },
            { data: "Description" },
            {
                "bSortable": false,
                "mData": function (data, type, dataToSet) {
                    if (data.Remarks.toString().trim() != "") {
                        return data.TaskRecordId;
                    } else { 
                        return null;
                    }
                },
                "mRender": function (o) {
                    if (o != null) {
                        return '<button class="btn btn-sm btn-primary" onClick="showComment(' + o + ')">View</button>'
                    } else { 
                        return ''
                    }
                    
                } //note under condition if no remarks was given the column would be blank
            }
        ],
        language: {
            emptyTable: "No Task was found.",
        }
    });

    function showComment(taskId) { 
        selectedMonthData = monthRecords[$('#selectMonthRecord').val()];
        var taskobj
        for (i = 0; i < selectedMonthData.TaskRecords.length; i++) { 
            var ataskobj = selectedMonthData.TaskRecords[i];
            if (ataskobj.TaskRecordId == taskId) { 
                taskobj = ataskobj;
                break;
            }
        }
        console.dir(taskobj);
        $('#commentModalLabel').text(moment(taskobj.Date).format("DD/MM/YYYY"));
        $('#commentTask').val(taskobj.Remarks);
        $('#commentModal').modal('show');
    }

    $('#selectstudent').change(function () {
        setCookie("selectedInternship", $(this).val());
        internshipId = getCookie("selectedInternship");
        console.dir("CHANGE STUDENT TO: " + internshipId);
        loadMonths(internshipId);
    });

    $('#selectMonthRecord').change(function () {
        selectedMonthData = monthRecords[$(this).val()];
        loadData(selectedMonthData);
    });

    function loadMonths(internshipId) {
        $.ajax({
            url: '/Api/Month_Record/getMonthsTasks/' + internshipId,
            method: 'GET',
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#selectMonthRecord').find('option').remove();
                for (i = 0; i < data.length; i++) {
                    var selectMonthRecord
                    var newOption = $('<option>').text('Month ' + (i + 1)).val(i);
                    $('#selectMonthRecord').append(newOption);
                }
                console.dir(data);
                monthRecords = data;
                loadData(monthRecords[0]);
            },
            fail: function (data) {
                alert(data.Message);
            }
        });
    }

    function loadData(monthData) {
        console.dir(monthData);
        $('#dataTable').dataTable().fnClearTable();
        if (monthData.TaskRecords.length > 0) {
            $('#dataTable').dataTable().fnAddData(monthData.TaskRecords);
        }
    }

    function loadStudents() {
        $.ajax({
            url: '/Api/Internship_Record/Sup_GetStudentInternship_Record',
            method: 'GET',
            dataType: 'json',
            cache: false,
            success: function (data) {
                console.dir(data);
                $('#selectstudent').find('option').remove();
                for (i = 0; i < data.length; i++) {
                    var student = data[i];
                    var newOption = $('<option></option>').text(student.StudentName).val(student.InternshipRecordId);
                    $('#selectstudent').append(newOption);
                }
                $('#selectstudent').val("" + internshipId);
            },
            fail: function (data) {
                alert(data.Message);
            }
        });
    }

    function getCookie(name) {
        var dc = document.cookie;
        var prefix = name + "=";
        var begin = dc.indexOf("; " + prefix);
        if (begin == -1) {
            begin = dc.indexOf(prefix);
            if (begin != 0) return null;
        } else {
            begin += 2;
        }
        var end = document.cookie.indexOf(";", begin);
        if (end == -1) {
            end = dc.length;
        }
        return unescape(dc.substring(begin + prefix.length, end));
    }

    function setCookie(inName, inValue) {
        var exdate = new Date();
        var expiredays = 1;
        exdate.setHours(exdate.getHours() + 4);
        exdate.setDate(exdate.getDate());
        document.cookie = inName + "=" + inValue + ";path=/" + ((expiredays == null) ? "" : ";expires=" + exdate.toGMTString());
    };

</script>