@{
    ViewData["Title"] = "View Competency Page";
}
<div class="container-fluid">
    <!-- Breadcrumbs-->
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="~/Home/Index">Homepage</a>
        </li>
        <li class="breadcrumb-item">
            <a href="~/Home/Student_Journal">Student Journal</a>
        </li>
        <li class="breadcrumb-item active">Competency History</li>
    </ol>
    <div class="card" style="border-width:0px;">
        <div class="card-body">
            <div class="form-group">
                <div class="pull-left">
                    <label>Student Name:&nbsp</label><select class="form-control" id="selectstudent">
                    </select>
                </div>
                <div class="col-xs-12 pull-right">
                    <label>View By:&nbsp</label>
                    <select class="form-control" id="selectMonthRecord">
                    </select>
                </div>
            </div>
        </div>
    </div>
    <div class="card mb-3">
        <div class="card-header d-inline">
            <i class="fa fa-check-square fa-2x pull-left"></i> <h3>Competency Checklist</h3>
        </div>
        <div class="table-responsive">
            <table class="table table-bordered" cellspacing="0" id="tblCompetencies">
                <thead>
                    <tr>
                        <th>Competency</th>
                        <th>Tick if performed</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        @*<div class="card-footer"></div>*@
    </div>
</div>
    <div class="card-body">
        <div class="form-group">
            <div class="col-12">
                <button class="btn btn-default pull-left" onclick="location.href='http://' + window.location.host +'/Home/Student_Journal'">
                    Back
                </button>
            </div>
        </div>
    </div>
&nbsp;
<script>
    var months;
    var selectedMonthData;
    var internshipId = getCookie("selectedInternship");
    loadStudents();
    $('#selectstudent').val(internshipId);
    loadCompetencies(internshipId);
    loadMonths(internshipId);

    $('#selectstudent').change(function () {
        setCookie("selectedInternship", $(this).val());
        internshipId = getCookie("selectedInternship");
        console.dir("CHANGE STUDENT TO: " + internshipId);
        loadCompetencies(internshipId);
        loadMonths(internshipId);
    });

    $('#selectMonthRecord').change(function () {
        selectedMonthData = months[$(this).val()];
        loadData(selectedMonthData);
    });

    function loadMonths(internshipId) {
        $.ajax({
            url: '/Api/Month_Record/InternshipMonthRecords/' + internshipId,
            method: 'GET',
            dataType: 'json',
            cache: false,
            success: function (data) {
                $('#selectMonthRecord').find('option').remove();
                for (i = 0; i < data.length; i++) {
                    var selectMonthRecord
                    var newOption = $('<option>').text('Week ' + (((i + 1) * 4) - 3) + ' to Week ' + (i + 1) * 4).val(i);
                    $('#selectMonthRecord').append(newOption);
                }
                console.dir(data);
                months = data;
                loadData(months[0]);
            },
            fail: function (data) {
                alert(data.Message);
            }
        });
    }

    function loadCompetencies(internshipRecordId) {
        $('#tblCompetencies').innerHTML = "";

        $.ajax({
            url: '/api/competencies/getInternshipCompetncies/' + internshipRecordId,
            method: 'GET',
            dataType: 'json',
            success: function (competencies) {
                $('#tblCompetencies').empty();
                var competencyTable = $('#tblCompetencies');
                for (i = 0; i < competencies.length; i++) {
                    var dataForCompetencyList = competencies[i].CompetencyList.sort(function (a, b) { return (a.ViewBy > b.ViewBy) ? 1 : ((b.ViewBy > a.ViewBy) ? -1 : 0); });
                    $threadElement = $('<thead></thead>');
                    $rowElement = $('<tr></tr>');
                    $cellElement = $('<th></th>', { text: competencies[i].ViewBy + ". " + competencies[i].TitleCompetency }).attr('title', competencies[i].TitleCompetency).attr('colspan', '2');
                    $rowElement.append($cellElement);

                    $threadElement.append($rowElement);
                    competencyTable.append($threadElement);

                    $tbodyElement = $('<tbody></tbody>')
                    for (k = 0; k < dataForCompetencyList.length; k++) {

                        $rowElement = $('<tr></tr>');
                        $cellElement = $('<td></td>');
                        //$cellElement = $('<td></td>', { text: data[i].CompetencyList[k].Description });
                        $cellElement.html(decodeURIComponent(dataForCompetencyList[k].Description));
                        $rowElement.append($cellElement);

                        $cellElement = $('<td style="text-align:center; vertical-align:center;"><input name="CompetencyCheck" type="checkbox"  disabled value="' + dataForCompetencyList[k].CompetencyId + '"></td>');
                        $rowElement.append($cellElement);

                        $tbodyElement.append($rowElement);
                        //   $threadElement.append($tbodyElement);
                        competencyTable.append($tbodyElement);
                    }
                }//end of for loop
            }
        });
    }

    function loadData(selectedMonth) {
        selectedMonth = months[$('#selectMonthRecord').val()];
        console.dir(selectedMonth);

        $("input[name='CompetencyCheck']").each(function () {
            if (selectedMonth.CompetencyCheckeds.length > 0) {
                for (i = 0; i < selectedMonth.CompetencyCheckeds.length; i++) {
                    var ccid = selectedMonth.CompetencyCheckeds[i].CompetencyId;
                    if ($(this).val() == ccid) {
                        $(this).prop('checked', true);
                    } else {
                        $(this).prop('checked', false);
                    }
                }
            } else { 
                $(this).prop('checked', false);
            }
            
        });
    }

    function loadStudents() {
        $.ajax({
            url: '/Api/Internship_Record/Sup_GetStudentInternship_Record',
            method: 'GET',
            dataType: 'json',
            cache: false,
            success: function (data) {
                console.dir(data);
                $('#selectstudent').find('option').remove();
                for (i = 0; i < data.length; i++) {
                    var student = data[i];
                    var newOption = $('<option></option>').text(student.StudentName).val(student.InternshipRecordId);
                    $('#selectstudent').append(newOption);
                }
                $('#selectstudent').val("" + internshipId);
            },
            fail: function (data) {
                alert(data.Message);
            }
        });
    }

    function getCookie(name) {
        var dc = document.cookie;
        var prefix = name + "=";
        var begin = dc.indexOf("; " + prefix);
        if (begin == -1) {
            begin = dc.indexOf(prefix);
            if (begin != 0) return null;
        } else {
            begin += 2;
        }
        var end = document.cookie.indexOf(";", begin);
        if (end == -1) {
            end = dc.length;
        }
        return unescape(dc.substring(begin + prefix.length, end));
    }

    function setCookie(inName, inValue) {
        var exdate = new Date();
        var expiredays = 1;
        exdate.setHours(exdate.getHours() + 4);
        exdate.setDate(exdate.getDate());
        document.cookie = inName + "=" + inValue + ";path=/" + ((expiredays == null) ? "" : ";expires=" + exdate.toGMTString());
    };
</script>