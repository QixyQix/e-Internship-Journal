@{
    ViewData["Title"] = "Manage Project Page";
}
<div class="container-fluid">
    <!-- Breadcrumbs-->
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="~/Home/Index">Homepage</a>
        </li>
        <li class="breadcrumb-item active">Manage Project</li>
    </ol>
    <!-- Example DataTables Card-->
    <div class="card mb-3">
        <div class="card-header">
            <i class="fa fa-briefcase"></i> Project
        </div>
        <div class="card-body">
            <div class="form-inline">
                <div class="col-12">
                    <div class="col-md-8 col-sm-8 col-xs-12 pull-left">
                        <button class="col-md-3 col-sm-3 col-xs-12 btn btn-default" onclick="popCSV()" id="bulkadd">
                            Bulk Add
                        </button>
                        &nbsp;
                        <button class="col-md-3 col-sm-3 col-xs-12 btn btn-danger" onclick="popbulkdel()" id="bulkdel">
                            Bulk Delete
                        </button>
                        &nbsp;
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 pull-right">
                        <button class="col-12 btn btn-primary pull-right" id="addproject" onclick="location.href='@Url.Action("add_project", "Home")'">
                            Add Project
                        </button>
                    </div>
                    &nbsp;
                </div>
            </div>
            <br />
            <div class="table-responsive">
                <table class="table table-bordered" id="project_dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th width="5%"><input name="select_all" type="checkbox" /></th>
                            <th class="Proj">Project name</th>
                            <th class="Superv">Supervisor</th>
                            <th class="S_NO">Supervisor's Contact No</th>
                            <th class="S_Email">Supervisor's Email</th>
                            <th class="Comp">Company</th>
                            <th width="10%">Action</th>
                        </tr>
                        <tr id="filterrow">
                            <th></th>
                            <th class="Proj">Project name</th>
                            <th class="Superv">Supervisor</th>
                            <th class="S_NO">Supervisor's Contact No</th>
                            <th class="S_Email">Supervisor's Email</th>
                            <th class="Comp">Company</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer"></div>
    </div>
    <div class="card-body">
        <div class="form-group">
            <div class="col-12">
                <button class="btn btn-default" onclick="location.href='http://' + window.location.host +'/Home/Index'">
                    Back
                </button>
            </div>
        </div>
    </div>
</div>

<style>

    @@media only screen and (max-width: 768px) {
        .S_NO, tr td:nth-child(4) {
            display: none;
            visibility: hidden;
        }
    }

    @@media only screen and (max-width: 420px) {
        .S_NO, tr td:nth-child(4) {
            display: none;
            visibility: hidden;
        }

        .S_Email, tr td:nth-child(5) {
            display: none;
            visibility: hidden;
        }
    }

    @@media only screen and (max-width: 320px) {
        .S_NO, tr td:nth-child(4) {
            display: none;
            visibility: hidden;
        }

        .S_Email, tr td:nth-child(5) {
            display: none;
            visibility: hidden;
        }
    }
</style>

<script>
    //
    // Updates "Select all" control in a data table
    //
    function updateDataTableSelectAllCtrl(table) {
        var $table = table.table().node();
        var $chkbox_all = $('tbody input[type="checkbox"]', $table);
        var $chkbox_checked = $('tbody input[type="checkbox"]:checked', $table);
        var chkbox_select_all = $('thead input[name="select_all"]', $table).get(0);

        // If none of the checkboxes are checked
        if ($chkbox_checked.length === 0) {
            chkbox_select_all.checked = false;
            if ('indeterminate' in chkbox_select_all) {
                chkbox_select_all.indeterminate = false;
            }

            // If all of the checkboxes are checked
        } else if ($chkbox_checked.length === $chkbox_all.length) {
            chkbox_select_all.checked = true;
            if ('indeterminate' in chkbox_select_all) {
                chkbox_select_all.indeterminate = false;
            }

            // If some of the checkboxes are checked
        } else {
            chkbox_select_all.checked = true;
            if ('indeterminate' in chkbox_select_all) {
                chkbox_select_all.indeterminate = true;
            }
        }
    }

    function hideFilter1() {
        $("#project_dataTable thead input").val("");
        $("#project_dataTable thead input").change();
        $('#project_dataTable thead tr#filterrow').toggle();
    }

    function popCSV() {
        $('#uploadcsvModal').modal('show');
    }
    function popbulkdel() {
        swal({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (result) {
            if (result.value) {
                var checkedProject = [];
                $("#project_dataTable tbody input[type='checkbox']:checked").each(function () {
                    checkedProject.push($(this).val());
                });
                if (checkedProject.length == 0) {
                    swal({
                        type: 'error',
                        title: 'Error',
                        text: 'Please select at least one project'
                    });
                } else {
                    $.ajax({
                        url: '/Api/Projects/DeleteProjects/bulk/?selectedProjects=' + checkedProject,
                        method: 'DELETE',
                        success: function (data) {
                            var title = data.AlertType == 'warning' ? 'Records displayed below not removed ' : 'Selected Records removed successfully!';
                           
                            swal({
                                type: data.AlertType,
                                title: title,
                                html: data.Messages.join('<br>')
                                //text: data.Message
                            }).then(function () {
                                window.location.reload();

                            })
                        },//End of success
                        error: function (data) {
                            swal({
                                type: 'error',
                                title: 'Error',
                                text: data.Message
                            });
                        }
                    })//End of ajax
                }

            } else if (result.dismiss === 'cancel') {
                swal(
                    'Cancelled',
                    'Your imaginary file is safe :)',
                    'error'
                )
            }
        }).catch(swal.noop);
    }

    function stopPropagation(evt) {
        if (evt.stopPropagation !== undefined) {
            evt.stopPropagation();
        } else {
            evt.cancelBubble = true;
        }
    }
    $(document).ready(function () {
        sessionStorage.clear();
        $.ajax({
            url: '/api/Projects',
            method: 'GET',
            dataType: 'json',
            cache: false,
            success: function (data) {
                loadDataTable(data);
            }//End of success
        });//End of Ajax


        $('#submitcsv').on('click', function (e) {
            var fileUpload = $("#csv_upload").get(0);
            var files = fileUpload.files;
            var data = new FormData();
            for (var i = 0; i < files.length; i++) {
                data.append(files[i].name, files[i]);
            }
            $.ajax({
                method: 'post',
                url: '/API/Projects/MassEnrollProjects/',
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                data: data,
                success: function (data) {
                    var title = data.AlertType == 'warning' ? 'Some records has been rejected ' : 'All records saved successfully';
                    swal({
                        type: data.AlertType,
                        title: title,
                        html: data.Messages.join('<br>')
                    });
                },//End of success
                error: function (data) {
                    swal({
                        type: 'error',
                        title: 'Error',
                        text: data.Message
                    });
                }//End of error
            })//End of Ajax call
        });//End of submitcsv 
    });//End of document ready function
    function loadDataTable(inData) {

        // Array holding selected row IDs
        var rows_selected = [];
        var table = $('#project_dataTable').DataTable({
            bSortable: false,
            //'fnDrawCallback': function (oSettings) {
            //    $('.dataTables_filter').(function () {
            //        $(this).append('<button class="btn btn-default mr-xs pull-right" type="button">Button');
            //    });
            //},
            dom: "<'row'<'col-sm-12'<f><'toolbar'>>><'row'<'col-sm-12'tr>>" +
            "<'row'<'col-sm-4'l><'col-sm-8'p>>",
            data: inData,
            columnDefs: [{
                'targets': 0,
                'searchable': false,
                'orderable': false,
                'width': '1%',
                'className': 'dt-body-center',
                'render': function (data, type, full, meta) {
                    return '<input type="checkbox" value="' + data.ProjectId + '">';
                }
            }],
            select: {
                style: 'os',
                selector: 'td:first-child'
            },
            order: [[1, 'asc']],
            'rowCallback': function (row, data, dataIndex) {
                // Get row ID
                var rowId = data[0];

                // If row ID is in the list of selected row IDs
                if ($.inArray(rowId, rows_selected) !== -1) {
                    $(row).find('input[type="checkbox"]').prop('checked', true);
                    $(row).addClass('selected');
                }
            },
            columns: [
                { data: null },
                { data: "ProjectName" },
                { data: "FullName" },
                { data: "PhoneNumber" },
                { data: "Email" },
                { data: "CompanyName" },
                {
                    data: "ProjectId",
                    "bSortable": false,
                    "mRender": function (o) { return '<button class="btn btn-sm btn-primary" onClick="editProject(\'' + o + '\')"><i class="fa fa-pencil-square-o"></i></button>&nbsp<button class="btn btn-sm btn-danger" id="deletebtn" onClick="deleteProject(\'' + o + '\')"><i class="fa fa-trash"></i></button>' }
                }
            ],
            language: {
                emptyTable: "No Project was found, please create one.",
            },
            initComplete: function () {
                $("div.toolbar")
                    .html('<div class="col-sm-4"><button class="btn btn-xs btn-default" onclick="hideFilter1()">Filter</button></div>');
                $("div.toolbar").parent().children().addClass("pull-right");
                hideFilter1();
            }
        });//End of DataTable


        // Handle click on checkbox
        $('#project_dataTable tbody').on('click', 'input[type="checkbox"]', function (e) {
            var $row = $(this).closest('tr');

            // Get row data
            var data = table.row($row).data();
            //  console.dir(data);
            // Get row ID
            var rowId = data[0];

            // Determine whether row ID is in the list of selected row IDs
            var index = $.inArray(rowId, rows_selected);

            // If checkbox is checked and row ID is not in list of selected row IDs
            if (this.checked && index === -1) {
                rows_selected.push(rowId);

                // Otherwise, if checkbox is not checked and row ID is in list of selected row IDs
            } else if (!this.checked && index !== -1) {
                rows_selected.splice(index, 1);
            }

            if (this.checked) {
                $row.addClass('selected');
            } else {
                $row.removeClass('selected');
            }

            // Update state of "Select all" control
            updateDataTableSelectAllCtrl(table);

            // Prevent click event from propagating to parent
            e.stopPropagation();
        });

        // Handle click on table cells with checkboxes
        $('#project_dataTable').on('click', 'tbody td, thead th:first-child', function (e) {
            $(this).parent().find('input[type="checkbox"]').trigger('click');
        });

        // Handle click on "Select all" control
        $('thead input[name="select_all"]', table.table().container()).on('click', function (e) {
            if (this.checked) {
                $('#project_dataTable tbody input[type="checkbox"]:not(:checked)').trigger('click');
            } else {
                $('#project_dataTable tbody input[type="checkbox"]:checked').trigger('click');
            }

            // Prevent click event from propagating to parent
            e.stopPropagation();
        });

        // Handle table draw event
        table.on('draw', function () {
            // Update state of "Select all" control
            updateDataTableSelectAllCtrl(table);
        });

        //handle custom search
        // Setup - add a text input to each footer cell
        $('#project_dataTable thead tr#filterrow th').each(function () {
            if ($('#project_dataTable thead tr#filterrow th').eq($(this).index()).text() != 0) {
                var title = $('#project_dataTable thead th').eq($(this).index()).text();
                $(this).html('<input type="text" onclick="stopPropagation(event);" placeholder="Search ' + title + '" />');
            }
        });
        // Apply the filter
        $("#project_dataTable thead input").on('keyup change', function () {
            if ($(this).attr('type') == "text") {
                table
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();
            }
        });
        //end of handle custom search

        //// Handle form submission event
        //$('#frm-example').on('submit', function (e) {
        //    var form = this;

        //    // Iterate over all selected checkboxes
        //    $.each(rows_selected, function (index, rowId) {
        //        // Create a hidden element
        //        $(form).append(
        //            $('<input>')
        //                .attr('type', 'hidden')
        //                .attr('name', 'id[]')
        //                .val(rowId)
        //        );
        //    });
        //});
        $('#project_dataTable tbody').on('click', 'button.btn-primary', function (e) {
            location.href = 'edit_project';
        });//End of on Click
        //$('#project_dataTable tbody').on('click', 'button.btn-danger', function (e) {
        //    swal({
        //        title: 'Are you sure?',
        //        text: "You won't be able to revert this!",
        //        type: 'warning',
        //        showCancelButton: true,
        //        confirmButtonColor: '#3085d6',
        //        cancelButtonColor: '#d33',
        //        confirmButtonText: 'Yes, delete it!'
        //    }).then(function (result) {
        //        if (result.value) {
        //            swal(
        //                'Deleted!',
        //                'Your file has been deleted.',
        //                'success'
        //            )
        //        }
        //    }).catch(swal.noop);
        //});//End of on Click
    }//End of function
    function editProject(inId) {
        sessionStorage.setItem("editProject", inId);
    };
    function deleteProject(inId) {
        swal({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (result) {
            if (result.value) {
                var checkedProject = [];       
                checkedProject.push(inId);
                $.ajax({
                    url: '/Api/Projects/DeleteProjects/bulk/?selectedProjects=' + checkedProject,
                    method: 'DELETE',
                    success: function (data, status, jqXHR) {
                        var title = data.AlertType == 'warning' ? 'Records displayed below not removed ' : 'Selected Records removed successfully!';

                        swal({
                            type: data.AlertType,
                            title: title,
                            html: data.Messages.join('<br>')
                            //text: data.Message
                        }).then(function () {
                            window.location.reload();
                        })
                    },//End of success
                    error: function (data) {
                        swal({
                            type: 'error',
                            title: 'Error',
                            text: data.Message
                        });
                    }//end of error
                });//End of ajax call
            }
        })
    }//End of function for deleteProject

</script>

