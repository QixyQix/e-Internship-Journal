@{
    ViewData["Title"] = "Manage User Page";
}
<div class="container-fluid">
    <!-- Breadcrumbs-->
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="~/Home/Index">Homepage</a>
        </li>
        <li class="breadcrumb-item">
            <a href="~/Home/Manage_Batch">Manage Batch</a>
        </li>
        <li class="breadcrumb-item active">Manage Students</li>
    </ol>
    <div class="card" style="border-width:0px;">
        <div class="card-body">
            <div class="form-group">
                <div class="pull-left">
                    <label>Batch Name:&nbsp</label><select class="form-control" id="selectBatch"></select>
                </div>
            </div>
        </div>
    </div>
    <div class="card mb-3">
        <div class="card-header d-inline">
            <i class="fa fa-table fa-2x pull-left"></i> <h3>Manage Students</h3>
        </div>
        <div class="card-body">
            <div class="form-inline">
                <div class="col-12">
                    <div class="col-md-8 col-sm-8 col-xs-12 pull-left">
                        <button class="col-md-3 col-sm-3 col-xs-12 btn btn-default" onclick="popCSV()" id="bulkadd">
                            Bulk Add
                        </button>
                        &nbsp;
                        <button class="col-md-3 col-sm-3 col-xs-12 btn btn-danger" onclick="popbulkdel()" id="bulkdel">
                            Bulk Delete
                        </button>
                        &nbsp;
                    </div>
                    <div class="col-md-3 col-sm-3 col-xs-12 pull-right">
                        <button class="col-12 btn btn-primary pull-right" id="addstudent" onclick="location.href='@Url.Action("add_student", "Home")'">
                            Add Student
                        </button>
                    </div>
                    &nbsp;
                </div>
            </div>
            <br />
            <div class="table-responsive">
                <table class="table table-bordered" id="student_dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th width="5%"><input name="select_all" value="1" type="checkbox" /></th>
                            <th class="S_ID" width="5%">Student ID</th>
                            <th class="S_Name" width="10%">Student Name</th>
                            <th class="M_NO" width="8%">Mobile No</th>
                            <th class="E_Add" width="10%">Email Address</th>
                            <th class="L_O" width="10%">Liason Officer</th>
                            <th class="Proj" width="5%">Project</th>
                            <th class="Comp" width="15%">Company</th>
                            <th class="Des" width="5%">Designation</th>
                            <th class="Allow" width="8%">Allowance</th>
                            <th width="10%">Action</th>
                        </tr>
                        <tr id="filterrow">
                            <th></th>
                            <th class="S_ID">Student ID</th>
                            <th class="S_Name">Student Name</th>
                            <th class="M_NO">Mobile No</th>
                            <th class="E_Add">Email Address</th>
                            <th class="L_O">Liason Officer</th>
                            <th class="Proj">Project</th>
                            <th class="Comp">Company</th>
                            <th class="Des">Designation</th>
                            <th class="Allow">Allowance</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td></td>
                            <td>P1551321</td>
                            <td>Catelyn Tan</td>
                            <td>ctlyn@gmail.com</td>
                            <td>Vincent Chan</td>
                            <td>Parliament</td>
                            <td>Webspark Pte Ltd</td>
                            <td>Web Designer</td>
                            <td>600</td>
                            <td></td>
                            <td></td>
                        </tr>
                        <tr>
                            <td></td>
                            <td>P1584512</td>
                            <td>Emily Teo</td>
                            <td>EmilyTeo97@hotmail.com</td>
                            <td>David Loo</td>
                            <td>CAAS</td>
                            <td>Rapid Cloud Pte Ltd</td>
                            <td>SEO analyze</td>
                            <td>600</td>
                            <td></td>
                            <td></td>
                        </tr>
                        <tr>
                            <td></td>
                            <td>P1581324</td>
                            <td>Jemma Sarah</td>
                            <td>Jemmaisfun@hotmail.com</td>
                            <td>Ally Tan</td>
                            <td>WIS</td>
                            <td>Aventure Pte Ltd</td>
                            <td>Backend Coder</td>
                            <td>750</td>
                            <td></td>
                            <td></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="form-group">
            <div class="col-12">
                <button class="btn btn-default pull-left" onclick="location.href='http://' + window.location.host +'/Home/Manage_Batch'">
                    Back
                </button>
            </div>
        </div>
    </div>
    &nbsp;
</div>

<style>

    @@media only screen and (max-width: 768px) {
        .Allow, tr td:nth-child(10) {
            display: none;
            visibility: hidden;
        }
    }

    @@media only screen and (max-width: 420px) {
        .Allow, tr td:nth-child(10) {
            display: none;
            visibility: hidden;
        }

        .Des, tr td:nth-child(9) {
            display: none;
            visibility: hidden;
        }

        .Comp, tr td:nth-child(8) {
            display: none;
            visibility: hidden;
        }

        .Proj, tr td:nth-child(7) {
            display: none;
            visibility: hidden;
        }

        .E_Add, tr td:nth-child(5) {
            display: none;
            visibility: hidden;
        }

        .M_NO, tr td:nth-child(4) {
            display: none;
            visibility: hidden;
        }
    }

    @@media only screen and (max-width: 320px) {
        .Allow, tr td:nth-child(10) {
            display: none;
            visibility: hidden;
        }

        .Des, tr td:nth-child(9) {
            display: none;
            visibility: hidden;
        }

        .Comp, tr td:nth-child(8) {
            display: none;
            visibility: hidden;
        }

        .Proj, tr td:nth-child(7) {
            display: none;
            visibility: hidden;
        }

        .E_Add, tr td:nth-child(5) {
            display: none;
            visibility: hidden;
        }

        .M_NO, tr td:nth-child(4) {
            display: none;
            visibility: hidden;
        }
    }
</style>

<script>
    //
    // Updates "Select all" control in a data table
    //
    function updateDataTableSelectAllCtrl(table) {
        var $table = table.table().node();
        var $chkbox_all = $('tbody input[type="checkbox"]', $table);
        var $chkbox_checked = $('tbody input[type="checkbox"]:checked', $table);
        var chkbox_select_all = $('thead input[name="select_all"]', $table).get(0);

        // If none of the checkboxes are checked
        if ($chkbox_checked.length === 0) {
            chkbox_select_all.checked = false;
            if ('indeterminate' in chkbox_select_all) {
                chkbox_select_all.indeterminate = false;
            }

            // If all of the checkboxes are checked
        } else if ($chkbox_checked.length === $chkbox_all.length) {
            chkbox_select_all.checked = true;
            if ('indeterminate' in chkbox_select_all) {
                chkbox_select_all.indeterminate = false;
            }

            // If some of the checkboxes are checked
        } else {
            chkbox_select_all.checked = true;
            if ('indeterminate' in chkbox_select_all) {
                chkbox_select_all.indeterminate = true;
            }
        }
    }

    function hideFilter1() {
        $("#student_dataTable thead input").val("");
        $("#student_dataTable thead input").change();
        $('#student_dataTable thead tr#filterrow').toggle();
    }

    function popCSV() {
        $('#uploadcsvModal').modal('show');
    }
    function popbulkdel() {
        swal({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (result) {
            if (result.value) {
                var checkedStudent = [];
                $("#student_dataTable tbody input[type='checkbox']:checked").each(function () {
                    checkedStudent.push($(this).val());
                });
                $.ajax({
                    url: '/Api/UserBatches/DeleteStudents/bulk/?checkedStudent=' + checkedStudent + '&selectedBatch=' + $('#selectBatch').val(),
                    method: 'DELETE',
                    success: function (data, status, jqXHR) {
                        var title = data.AlertType == 'warning' ? 'Records displayed below not removed ' : 'Selected Records removed successfully!';

                        swal({
                            type: data.AlertType,
                            title: title,
                            html: data.Messages.join('<br>')
                            //text: data.Message
                        }).then(function () {
                            window.location.reload();
                        })
                    },//End of success
                    error: function (data) {
                        swal({
                            type: 'error',
                            title: 'Error',
                            text: data.Message
                        });
                    }//end of error
                });//End of ajax call
            }//end of If statement
        }).catch(swal.noop);
    }

    function stopPropagation(evt) {
        if (evt.stopPropagation !== undefined) {
            evt.stopPropagation();
        } else {
            evt.cancelBubble = true;
        }
    }
    $(document).ready(function () {


        for (i = 0; i < sessionStorage.length; i++) {
            if (sessionStorage.key(i) != 'selected' && sessionStorage.key(i) != 'editStudent') {
                $batchInputElement = $('#selectBatch');
                $optionElement = $('<option>').text(sessionStorage.key(i)).attr('value', sessionStorage.getItem(sessionStorage.key(i)));
                //$optionElement = $('<option>').text(Object.keys(sessionStorage.key[i]));
                $batchInputElement.append($optionElement);
            // console.log(localStorage.getItem(localStorage.key(i)));
            }

        }
     
        var selectedBatch = sessionStorage.getItem('selected');
        $('#selectBatch').val(selectedBatch);
        loadData(selectedBatch);
        $('#selectBatch').on('change', function (e) {
            sessionStorage.setItem('selected', $(this).val());
            loadData($(this).val());
            hideFilter1();
        });
        //Handle click for bulk add

        $('#submitcsv').on('click', function (e) {
            var fileUpload = $("#csv_upload").get(0);
            var files = fileUpload.files;
            var data = new FormData();
            for (var i = 0; i < files.length; i++) {
                data.append(files[i].name, files[i]);
            }
            //                < form asp- action="EnrollStudent"
            //            asp - route - id="1"
            //            asp - controller="Enrollment"
            //            method = "post"
            //            enctype = "multipart/form-data" >
            //                <input type="file" name="files" multiple />
            //                <input type="submit" value="Upload Selected File" />
            //</form >
            //$('#csv_form').attr('action', "/api/enroll/EnrollStudent/" + selectedBatch);
            $saveStudentHandler = jQuery.ajax({
                method: 'post',
                url: '/API/Enroll/EnrollStudent/' + sessionStorage.getItem('selected'),
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                data: data,
            });
            $saveStudentHandler.done(function (data, textStatus, jqXHR) {
                //data.Message;
                swal({
                    type: data.AlertType,
                    title: 'You did it!',
                    html: data.Messages.join('<br>')
                }).then(
                    function () {
                        data.AlertType == 'error' ? null : window.location.reload();
                    });
            });
            $saveStudentHandler.fail(function (data, textStatus, jqXHR) {
                swal({
                    type: 'error',
                    title: 'Oops!',
                    text: data.responseJSON.Message
                });
            });

        });

    });//End of document ready
    function loadData(inId) {
        $.ajax({
            url: '/Api/Batches/getBatchStudents/' + inId,
            method: 'GET',
            dataType: 'json',
            cache: false,
            success: function (data) {
                loadDataTable(data);
            }//End of success
        });//End of Ajax
    }
    function loadDataTable(inData) {



        // Array holding selected row IDs
        var rows_selected = [];
        var table = $('#student_dataTable').DataTable({
            bSortable: false,
            destroy: true,
            //'fnDrawCallback': function (oSettings) {
            //    $('.dataTables_filter').(function () {
            //        $(this).append('<button class="btn btn-default mr-xs pull-right" type="button">Button');
            //    });
            //},
            dom: "<'row'<'col-sm-12'<f><'toolbar'>>><'row'<'col-sm-12'tr>>" +
            "<'row'<'col-sm-4'l><'col-sm-8'p>>",
            data: inData,
            columnDefs: [{
                'targets': 0,
                'searchable': false,
                'orderable': false,
                'width': '1%',
                'className': 'dt-body-center',
                'render': function (data, type, full, meta) {
                    return '<input type="checkbox" value="' + data.StudentEmail + '">';
                }
            }],
            select: {
                style: 'os',
                selector: 'td:first-child'
            },
            order: [[1, 'asc']],
            'rowCallback': function (row, data, dataIndex) {
                // Get row ID
                var rowId = data[0];

                // If row ID is in the list of selected row IDs
                if ($.inArray(rowId, rows_selected) !== -1) {
                    $(row).find('input[type="checkbox"]').prop('checked', true);
                    $(row).addClass('selected');
                }
            },
            columns: [
                { data: null },
                { data: "StudentUserId" },
                { data: "StudentName" },
                { data: "StudentPhoneNumber" },
                { data: "StudentEmail" },
                { data: "LOName" },
                { data: "ProjectName" },
                { data: "CompanyName" },
                { data: 'Designation' },
                { data: 'Allowance' },
                {
                    data: "StudentEmail",
                    "bSortable": false,
                    "mRender": function (o) { return '<div class="d-inline"><button class="btn btn-sm btn-primary" onClick="editStudent(\'' + o + '\')"><i class="fa fa-pencil-square-o"></i></button>&nbsp<button class="btn btn-sm btn-danger" id="deletebtn" onClick="deleteStudent(\'' + o + '\')"><i class="fa fa-trash"></i></button></div>' }
                }
            ],
            language: {
                emptyTable: "No Batch was found, please create one.",
            },
            initComplete: function () {
                $("div.toolbar")
                    .html('<div class="col-sm-4"><button class="btn btn-xs btn-default" onclick="hideFilter1()">Filter</button></div>');
                $("div.toolbar").parent().children().addClass("pull-right");
                hideFilter1();
            }
        });//End of DataTable

        $('#student_dataTable tbody').off('click');
        // Handle click on checkbox
        $('#student_dataTable tbody').on('click', 'input[type="checkbox"]', function (e) {
            var $row = $(this).closest('tr');

            // Get row data
            var data = table.row($row).data();

            // Get row ID
            var rowId = data[0];

            // Determine whether row ID is in the list of selected row IDs
            var index = $.inArray(rowId, rows_selected);

            // If checkbox is checked and row ID is not in list of selected row IDs
            if (this.checked && index === -1) {
                rows_selected.push(rowId);

                // Otherwise, if checkbox is not checked and row ID is in list of selected row IDs
            } else if (!this.checked && index !== -1) {
                rows_selected.splice(index, 1);
            }

            if (this.checked) {
                $row.addClass('selected');
            } else {
                $row.removeClass('selected');
            }

            // Update state of "Select all" control
            updateDataTableSelectAllCtrl(table);

            // Prevent click event from propagating to parent
            e.stopPropagation();
        });

        // Handle click on table cells with checkboxes
        $('#student_dataTable').on('click', 'tbody td, thead th:first-child', function (e) {
            $(this).parent().find('input[type="checkbox"]').trigger('click');
        });

        // Handle click on "Select all" control
        $('thead input[name="select_all"]', table.table().container()).on('click', function (e) {
            if (this.checked) {
                $('#student_dataTable tbody input[type="checkbox"]:not(:checked)').trigger('click');
            } else {
                $('#student_dataTable tbody input[type="checkbox"]:checked').trigger('click');
            }

            // Prevent click event from propagating to parent
            e.stopPropagation();
        });

        // Handle table draw event
        table.on('draw', function () {
            // Update state of "Select all" control
            updateDataTableSelectAllCtrl(table);
        });

        //handle custom search
        // Setup - add a text input to each footer cell
        $('#student_dataTable thead tr#filterrow th').each(function () {
            if ($('#student_dataTable thead tr#filterrow th').eq($(this).index()).text() != 0) {
                var title = $('#student_dataTable thead th').eq($(this).index()).text();
                $(this).html('<input type="text" onclick="stopPropagation(event);" placeholder="Search ' + title + '" />');
            }
        });
        // Apply the filter
        $("#student_dataTable thead input").on('keyup change', function () {
            if ($(this).attr('type') == "text") {
                table
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();
            }
        });
        //end of handle custom search

        //// Handle form submission event
        //$('#frm-example').on('submit', function (e) {
        //    var form = this;

        //    // Iterate over all selected checkboxes
        //    $.each(rows_selected, function (index, rowId) {
        //        // Create a hidden element
        //        $(form).append(
        //            $('<input>')
        //                .attr('type', 'hidden')
        //                .attr('name', 'id[]')
        //                .val(rowId)
        //        );
        //    });
        //});
        $('#student_dataTable tbody').on('click', 'button.btn-primary', function (e) {
            location.href = 'edit_student';
        });
        //$('#student_dataTable tbody').on('click', 'button.btn-danger', function (e) {
        //    swal({
        //        title: 'Are you sure?',
        //        text: "You won't be able to revert this!",
        //        type: 'warning',
        //        showCancelButton: true,
        //        confirmButtonColor: '#3085d6',
        //        cancelButtonColor: '#d33',
        //        confirmButtonText: 'Yes, delete it!'
        //    }).then(function (result) {
        //        if (result.value) {
        //            swal(
        //                'Deleted!',
        //                'Your file has been deleted.',
        //                'success'
        //            )
        //        }
        //    }).catch(swal.noop);
        //});//End of on Click

    }//end of function LoadDataTable()
    function editStudent(inId) {
        sessionStorage.setItem("editStudent", inId);
    };
    function deleteStudent(inId) {
        swal({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (result) {
            if (result.value) {
                var checkedStudent = [];
                $("#student_dataTable tbody input[type='checkbox']:checked").each(function () {
                    checkedStudent.push($(this).val());
                });
                $.ajax({
                    url: '/Api/UserBatches/DeleteStudents/bulk/?checkedStudent=' + checkedStudent + '&selectedBatch=' + $('#selectBatch').val(),
                    method: 'DELETE',
                    success: function (data, status, jqXHR) {
                        var title = data.AlertType == 'warning' ? 'Records displayed below not removed ' : 'Selected Records removed successfully!';

                        swal({
                            type: data.AlertType,
                            title: title,
                            html: data.Messages.join('<br>')
                            //text: data.Message
                        }).then(function () {
                            window.location.reload();
                        })
                    },//End of success
                    error: function (data) {
                        swal({
                            type: 'error',
                            title: 'Error',
                            text: data.Message
                        });
                    }//end of error
                });//End of ajax call
            }//end of If statement
        })//end of THen function
    }//End of function for deleteProject
</script>